[{"/Users/yunminseok/Desktop/study/Mlog/pages/404.tsx":"1","/Users/yunminseok/Desktop/study/Mlog/pages/_app.tsx":"2","/Users/yunminseok/Desktop/study/Mlog/pages/_document.tsx":"3","/Users/yunminseok/Desktop/study/Mlog/pages/_error.tsx":"4","/Users/yunminseok/Desktop/study/Mlog/pages/index.tsx":"5","/Users/yunminseok/Desktop/study/Mlog/pages/posts/index.tsx":"6","/Users/yunminseok/Desktop/study/Mlog/components/header/Header.tsx":"7","/Users/yunminseok/Desktop/study/Mlog/components/section/mainpage/Introduce.tsx":"8","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/posts.tsx":"9","/Users/yunminseok/Desktop/study/Mlog/components/templetes/MainPageTemplate.tsx":"10","/Users/yunminseok/Desktop/study/Mlog/components/templetes/PostsPageTemplate.tsx":"11","/Users/yunminseok/Desktop/study/Mlog/pages/plan/index.tsx":"12","/Users/yunminseok/Desktop/study/Mlog/pages/posts/slider/index.tsx":"13","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.tsx":"14","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.style.ts":"15","/Users/yunminseok/Desktop/study/Mlog/pages/posts/infiniteScroll/index.tsx":"16","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/infiniteScroll/InfiniteScroll.tsx":"17"},{"size":4244,"mtime":1651322960853,"results":"18","hashOfConfig":"19"},{"size":369,"mtime":1653914216145,"results":"20","hashOfConfig":"19"},{"size":839,"mtime":1651404352174,"results":"21","hashOfConfig":"19"},{"size":983,"mtime":1651061212212,"results":"22","hashOfConfig":"19"},{"size":175,"mtime":1651062148728,"results":"23","hashOfConfig":"19"},{"size":179,"mtime":1651144810715,"results":"24","hashOfConfig":"19"},{"size":1795,"mtime":1654001811134,"results":"25","hashOfConfig":"19"},{"size":1015,"mtime":1651322068064,"results":"26","hashOfConfig":"19"},{"size":3561,"mtime":1654003424295,"results":"27","hashOfConfig":"19"},{"size":485,"mtime":1654001831337,"results":"28","hashOfConfig":"19"},{"size":475,"mtime":1654001853985,"results":"29","hashOfConfig":"19"},{"size":179,"mtime":1653114012515,"results":"30","hashOfConfig":"19"},{"size":675,"mtime":1653114010435,"results":"31","hashOfConfig":"19"},{"size":4344,"mtime":1653915719024,"results":"32","hashOfConfig":"19"},{"size":2430,"mtime":1653915727887,"results":"33","hashOfConfig":"19"},{"size":431,"mtime":1654004705269,"results":"34","hashOfConfig":"19"},{"size":110,"mtime":1654003744773,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vsygy",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yunminseok/Desktop/study/Mlog/pages/404.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/_app.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/_document.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/_error.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/posts/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/header/Header.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/mainpage/Introduce.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/posts.tsx",["89"],[],"import Image from 'next/image';\nimport Link from 'next/link';\nimport React from 'react';\nimport styled from 'styled-components';\n\n//data\nimport { postData } from '../../../data/\u001dPostData';\n\nconst Posts = () => {\n  return (\n    <Container>\n      <PostWrap>\n        {postData.map((item) => {\n          return (\n            <PostBox key={item.id}>\n              <Link href={item.link}>\n                <LinkBox>\n                  <ThumnailContent>\n                    <Thumnail src={item.image} alt=\"post_image\" layout=\"fill\" />\n                  </ThumnailContent>\n                </LinkBox>\n              </Link>\n              <ContentBox>\n                <Link href={item.link}>\n                  <LinkBox>\n                    <ContentH4>{item.title}</ContentH4>\n                    <ContentDescription>\n                      <ContentDescriptionP>{item.content}</ContentDescriptionP>\n                    </ContentDescription>\n                  </LinkBox>\n                </Link>\n                <SubInfo>\n                  <span>{item.date}</span>\n                </SubInfo>\n              </ContentBox>\n            </PostBox>\n          );\n        })}\n      </PostWrap>\n    </Container>\n  );\n};\n\nexport default Posts;\n{\n  /* <PostBox>\n  <Link href=\"/posts/slider\">\n    <LinkBox>\n      <ThumnailContent>\n        <Thumnail\n          src={'/SliderImage1.jpeg'}\n          alt=\"post_image\"\n          layout=\"fill\"\n        />\n      </ThumnailContent>\n    </LinkBox>\n  </Link>\n  <ContentBox>\n    <Link href=\"/posts/slider\">\n      <LinkBox>ß\n        <ContentH4>Infinite carousel slider</ContentH4>\n        <ContentDescription>\n          <ContentDescriptionP>\n            TypeScript를 이용해서 만든 무한 자동 슬라이드\n          </ContentDescriptionP>\n        </ContentDescription>\n      </LinkBox>ß\n    </Link>\n    <SubInfo>\n      <span>2022년 4월 28일</span>\n    </SubInfo>\n  </ContentBox>\n</PostBox> */\n}\n\nconst Container = styled.section`\n  height: 100vh;\n  background-color: #121212;\n`;\n\nconst PostWrap = styled.div`\n  display: flex;\n  padding: 2rem;\n  flex-wrap: wrap;\n`;\n\nconst PostBox = styled.div`\n  width: 18rem;\n  background: #1e1e1e;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 4%) 0px 4px 16px 0px;\n  transition: box-shadow 0.25s ease-in 0s, transform 0.25s ease-in 0s;\n  margin: 1rem;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LinkBox = styled.a`\n  display: block;\n  color: inherit;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nconst ThumnailContent = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 52.19206680584551%;\n`;\n\nconst Thumnail = styled(Image)`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  display: block;\n  object-fit: cover;\n`;\n\nconst ContentBox = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex: 1 1 0%;\n  flex-direction: column;\n`;\n\nconst ContentH4 = styled.h4`\n  font-size: 1rem;\n  margin: 0px 0px 0.25rem;\n  line-height: 1.5;\n  word-break: break-word;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  color: #ececec;\n`;\n\nconst ContentDescription = styled.div`\n  flex: 1 1 0%;\n`;\n\nconst ContentDescriptionP = styled.p`\n  margin: 0px 0px 1.5rem;\n  word-break: break-word;\n  overflow-wrap: break-word;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  height: 3.9375rem;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #d9d9d9;\n`;\n\nconst SubInfo = styled.div`\n  font-size: 0.75rem;\n  line-height: 1.5;\n  color: #acacac;\n`;\n","/Users/yunminseok/Desktop/study/Mlog/components/templetes/MainPageTemplate.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/templetes/PostsPageTemplate.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/plan/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/posts/slider/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.tsx",["90","91"],[],"import { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\n\n//styled\nimport * as Styled from './Slider.style';\n\ntype SliderProps = {\n  images: { pic: string; id: number }[];\n};\n\nconst Slider: React.FC<SliderProps> = ({ images }) => {\n  const router = useRouter();\n  const imageSize = images.length;\n  const moreSlide = 1;\n\n  const [mouseDownClientX, setMouseDownClientX] = useState<number>(0);\n  const [mouseUpClientX, setMouseUpClientX] = useState<number>(0);\n  const [cursorOn, setCursorOn] = useState<boolean>(false);\n\n  const [imageIndex, setImageIndex] = useState<number>(0);\n\n  const [translateValue, setTranslateValue] = useState<number>(0);\n\n  const moveRight = (): void => {\n    if (translateValue !== 70 * (images.length - 1)) {\n      setTranslateValue((prev) => prev + 70);\n    } else {\n      setTranslateValue(0);\n    }\n  };\n\n  const moveLeft = (): void => {\n    if (translateValue !== 0) {\n      setTranslateValue((prev) => prev - 70);\n    } else {\n      setTranslateValue(70 * (images.length - 1));\n    }\n  };\n  let slides = setSlides();\n  //복제 슬라이드\n  function setSlides() {\n    let addedFront = [];\n    let addedLast = [];\n    var index = 0;\n    while (index < moreSlide) {\n      addedLast.push(images[index % images.length]);\n      addedFront.unshift(images[images.length - 1 - (index % images.length)]);\n      index++;\n    }\n\n    return [...addedFront, ...images, ...addedLast];\n  }\n\n  function getItemIndex(index: number) {\n    index -= moreSlide;\n    if (index < 0) {\n      index += imageSize;\n    } else if (index >= imageSize) {\n      index -= imageSize;\n    }\n\n    return index;\n  }\n\n  //슬라이드 이벤트\n  const clickRight = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    moveRight();\n  };\n  const clickLeft = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    moveLeft();\n  };\n\n  //드래그 이벤트\n  const onMouseDown = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    setMouseDownClientX(e.clientX);\n    setCursorOn(true);\n  };\n  const onMouseUp = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    setMouseUpClientX(e.clientX);\n    setCursorOn(false);\n  };\n\n  //드래그 이벤트 부분\n  useEffect(() => {\n    const dragSpace = Math.abs(mouseDownClientX - mouseUpClientX);\n    if (mouseDownClientX !== 0) {\n      if (mouseUpClientX < mouseDownClientX && dragSpace > 100) {\n        moveRight();\n      } else if (mouseUpClientX > mouseDownClientX && dragSpace > 100) {\n        moveLeft();\n      }\n    }\n  }, [mouseUpClientX]);\n\n  //자동슬라이드 부분\n  useEffect(() => {\n    setImageIndex(translateValue / 70);\n    const imageInterval = setInterval(() => {\n      moveRight();\n    }, 3000);\n\n    return () => {\n      clearInterval(imageInterval);\n    };\n  }, [translateValue]);\n\n  return (\n    <>\n      <Styled.BackButton\n        onClick={() => router.back()}\n        src={'/arrow.png'}\n        alt={'arrow'}\n        width={50}\n        height={50}\n      />\n      <Styled.SliderBox\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        cursorOn={cursorOn}\n      >\n        <Styled.ImageBox\n          translateValue={translateValue !== 0 ? translateValue : null}\n        >\n          {slides.map((picture, idx) => {\n            const itemIndex = getItemIndex(idx);\n\n            return (\n              <Styled.SliderImage\n                key={picture.id + idx}\n                src={images[itemIndex].pic}\n                alt={'background' + idx}\n              />\n            );\n          })}\n        </Styled.ImageBox>\n        <Styled.PrevArrowBox>\n          <Styled.PrevArrow\n            onClick={clickLeft}\n            src={'/arrow.png'}\n            alt={'arrow'}\n            width={50}\n            height={50}\n          />\n        </Styled.PrevArrowBox>\n        <Styled.NextArrowBox>\n          <Styled.NextArrow\n            onClick={clickRight}\n            src={'/arrow.png'}\n            alt={'arrow'}\n            width={50}\n            height={50}\n          />\n        </Styled.NextArrowBox>\n      </Styled.SliderBox>\n      <Styled.DotBox>\n        {images.map((picture, idx) => {\n          return <Styled.Dot key={picture.id}></Styled.Dot>;\n        })}\n        <Styled.CurrentDot imageIndex={imageIndex}></Styled.CurrentDot>\n      </Styled.DotBox>\n    </>\n  );\n};\n\nexport default Slider;\n","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.style.ts",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/posts/infiniteScroll/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/infiniteScroll/InfiniteScroll.tsx",[],[],{"ruleId":"92","severity":1,"message":"93","line":45,"column":1,"nodeType":"94","messageId":"95","endLine":74,"endColumn":2},{"ruleId":"96","severity":1,"message":"97","line":93,"column":6,"nodeType":"98","endLine":93,"endColumn":22,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":105,"column":6,"nodeType":"98","endLine":105,"endColumn":22,"suggestions":"101"},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mouseDownClientX', 'moveLeft', and 'moveRight'. Either include them or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'moveRight'. Either include it or remove the dependency array.",["103"],{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [mouseDownClientX, mouseUpClientX, moveLeft, moveRight]",{"range":"108","text":"109"},"Update the dependencies array to be: [moveRight, translateValue]",{"range":"110","text":"111"},[2487,2503],"[mouseDownClientX, mouseUpClientX, moveLeft, moveRight]",[2728,2744],"[moveRight, translateValue]"]