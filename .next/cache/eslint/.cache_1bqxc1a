[{"/Users/yunminseok/Desktop/study/Mlog/pages/404.tsx":"1","/Users/yunminseok/Desktop/study/Mlog/pages/_app.tsx":"2","/Users/yunminseok/Desktop/study/Mlog/pages/_document.tsx":"3","/Users/yunminseok/Desktop/study/Mlog/pages/_error.tsx":"4","/Users/yunminseok/Desktop/study/Mlog/pages/index.tsx":"5","/Users/yunminseok/Desktop/study/Mlog/pages/posts/index.tsx":"6","/Users/yunminseok/Desktop/study/Mlog/components/header/Header.tsx":"7","/Users/yunminseok/Desktop/study/Mlog/components/section/mainpage/Introduce.tsx":"8","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/posts.tsx":"9","/Users/yunminseok/Desktop/study/Mlog/components/templetes/MainPageTemplate.tsx":"10","/Users/yunminseok/Desktop/study/Mlog/components/templetes/PostsPageTemplate.tsx":"11","/Users/yunminseok/Desktop/study/Mlog/pages/plan/index.tsx":"12","/Users/yunminseok/Desktop/study/Mlog/pages/posts/slider/index.tsx":"13","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.tsx":"14","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.style.ts":"15","/Users/yunminseok/Desktop/study/Mlog/pages/posts/infiniteScroll/index.tsx":"16","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/infiniteScroll/InfiniteScroll.tsx":"17","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/infiniteScroll/InfiniteScroll.style.ts":"18"},{"size":4244,"mtime":1651322960853,"results":"19","hashOfConfig":"20"},{"size":369,"mtime":1653914216145,"results":"21","hashOfConfig":"20"},{"size":839,"mtime":1651404352174,"results":"22","hashOfConfig":"20"},{"size":983,"mtime":1651061212212,"results":"23","hashOfConfig":"20"},{"size":175,"mtime":1651062148728,"results":"24","hashOfConfig":"20"},{"size":179,"mtime":1651144810715,"results":"25","hashOfConfig":"20"},{"size":1795,"mtime":1654001811134,"results":"26","hashOfConfig":"20"},{"size":1015,"mtime":1651322068064,"results":"27","hashOfConfig":"20"},{"size":2861,"mtime":1654050893102,"results":"28","hashOfConfig":"20"},{"size":485,"mtime":1654001831337,"results":"29","hashOfConfig":"20"},{"size":475,"mtime":1654001853985,"results":"30","hashOfConfig":"20"},{"size":179,"mtime":1653114012515,"results":"31","hashOfConfig":"20"},{"size":675,"mtime":1653114010435,"results":"32","hashOfConfig":"20"},{"size":4344,"mtime":1653915719024,"results":"33","hashOfConfig":"20"},{"size":2430,"mtime":1653915727887,"results":"34","hashOfConfig":"20"},{"size":414,"mtime":1654056988698,"results":"35","hashOfConfig":"20"},{"size":1896,"mtime":1654179514646,"results":"36","hashOfConfig":"20"},{"size":803,"mtime":1654179513205,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vsygy",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yunminseok/Desktop/study/Mlog/pages/404.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/_app.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/_document.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/_error.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/posts/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/header/Header.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/mainpage/Introduce.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/posts.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/templetes/MainPageTemplate.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/templetes/PostsPageTemplate.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/plan/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/posts/slider/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.tsx",["94","95"],[],"import { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\n\n//styled\nimport * as Styled from './Slider.style';\n\ntype SliderProps = {\n  images: { pic: string; id: number }[];\n};\n\nconst Slider: React.FC<SliderProps> = ({ images }) => {\n  const router = useRouter();\n  const imageSize = images.length;\n  const moreSlide = 1;\n\n  const [mouseDownClientX, setMouseDownClientX] = useState<number>(0);\n  const [mouseUpClientX, setMouseUpClientX] = useState<number>(0);\n  const [cursorOn, setCursorOn] = useState<boolean>(false);\n\n  const [imageIndex, setImageIndex] = useState<number>(0);\n\n  const [translateValue, setTranslateValue] = useState<number>(0);\n\n  const moveRight = (): void => {\n    if (translateValue !== 70 * (images.length - 1)) {\n      setTranslateValue((prev) => prev + 70);\n    } else {\n      setTranslateValue(0);\n    }\n  };\n\n  const moveLeft = (): void => {\n    if (translateValue !== 0) {\n      setTranslateValue((prev) => prev - 70);\n    } else {\n      setTranslateValue(70 * (images.length - 1));\n    }\n  };\n  let slides = setSlides();\n  //복제 슬라이드\n  function setSlides() {\n    let addedFront = [];\n    let addedLast = [];\n    var index = 0;\n    while (index < moreSlide) {\n      addedLast.push(images[index % images.length]);\n      addedFront.unshift(images[images.length - 1 - (index % images.length)]);\n      index++;\n    }\n\n    return [...addedFront, ...images, ...addedLast];\n  }\n\n  function getItemIndex(index: number) {\n    index -= moreSlide;\n    if (index < 0) {\n      index += imageSize;\n    } else if (index >= imageSize) {\n      index -= imageSize;\n    }\n\n    return index;\n  }\n\n  //슬라이드 이벤트\n  const clickRight = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    moveRight();\n  };\n  const clickLeft = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    moveLeft();\n  };\n\n  //드래그 이벤트\n  const onMouseDown = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    setMouseDownClientX(e.clientX);\n    setCursorOn(true);\n  };\n  const onMouseUp = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    setMouseUpClientX(e.clientX);\n    setCursorOn(false);\n  };\n\n  //드래그 이벤트 부분\n  useEffect(() => {\n    const dragSpace = Math.abs(mouseDownClientX - mouseUpClientX);\n    if (mouseDownClientX !== 0) {\n      if (mouseUpClientX < mouseDownClientX && dragSpace > 100) {\n        moveRight();\n      } else if (mouseUpClientX > mouseDownClientX && dragSpace > 100) {\n        moveLeft();\n      }\n    }\n  }, [mouseUpClientX]);\n\n  //자동슬라이드 부분\n  useEffect(() => {\n    setImageIndex(translateValue / 70);\n    const imageInterval = setInterval(() => {\n      moveRight();\n    }, 3000);\n\n    return () => {\n      clearInterval(imageInterval);\n    };\n  }, [translateValue]);\n\n  return (\n    <>\n      <Styled.BackButton\n        onClick={() => router.back()}\n        src={'/arrow.png'}\n        alt={'arrow'}\n        width={50}\n        height={50}\n      />\n      <Styled.SliderBox\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        cursorOn={cursorOn}\n      >\n        <Styled.ImageBox\n          translateValue={translateValue !== 0 ? translateValue : null}\n        >\n          {slides.map((picture, idx) => {\n            const itemIndex = getItemIndex(idx);\n\n            return (\n              <Styled.SliderImage\n                key={picture.id + idx}\n                src={images[itemIndex].pic}\n                alt={'background' + idx}\n              />\n            );\n          })}\n        </Styled.ImageBox>\n        <Styled.PrevArrowBox>\n          <Styled.PrevArrow\n            onClick={clickLeft}\n            src={'/arrow.png'}\n            alt={'arrow'}\n            width={50}\n            height={50}\n          />\n        </Styled.PrevArrowBox>\n        <Styled.NextArrowBox>\n          <Styled.NextArrow\n            onClick={clickRight}\n            src={'/arrow.png'}\n            alt={'arrow'}\n            width={50}\n            height={50}\n          />\n        </Styled.NextArrowBox>\n      </Styled.SliderBox>\n      <Styled.DotBox>\n        {images.map((picture, idx) => {\n          return <Styled.Dot key={picture.id}></Styled.Dot>;\n        })}\n        <Styled.CurrentDot imageIndex={imageIndex}></Styled.CurrentDot>\n      </Styled.DotBox>\n    </>\n  );\n};\n\nexport default Slider;\n","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/slider/Slider.style.ts",[],[],"/Users/yunminseok/Desktop/study/Mlog/pages/posts/infiniteScroll/index.tsx",[],[],"/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/infiniteScroll/InfiniteScroll.tsx",["96"],[],"import { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport ReactLoading from 'react-loading';\n\n//styled\nimport * as Styled from './InfiniteScroll.style';\n\nconst InfiniteScroll = () => {\n  const router = useRouter();\n  const [itemList, setItemList] = useState<number[]>([\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\n  ]);\n  const [target, setTarget] = useState<HTMLElement | null | undefined>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const onIntersect: IntersectionObserverCallback = async (\n    [entry],\n    observer,\n  ) => {\n    if (entry.isIntersecting && !isLoading) {\n      observer.unobserve(entry.target);\n      setIsLoading(true);\n      // 데이터를 가져오는 부분\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      let Items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n      setItemList((itemLists) => itemLists.concat(Items));\n      setIsLoading(false);\n      observer.observe(entry.target);\n    }\n  };\n\n  useEffect(() => {\n    if (!target) return;\n\n    let observer: IntersectionObserver;\n\n    if (target) {\n      observer = new IntersectionObserver(onIntersect, {\n        threshold: 0.4,\n      });\n      observer.observe(target);\n    }\n\n    return () => observer && observer.disconnect();\n  }, [target]);\n\n  return (\n    <>\n      <Styled.BackButton\n        onClick={() => router.back()}\n        src={'/arrow.png'}\n        alt={'arrow'}\n        width={50}\n        height={50}\n      />\n      <Styled.ItemWrap>\n        {itemList.map((item: number, index: number) => {\n          return <Styled.Item>{index + 1}</Styled.Item>;\n        })}\n      </Styled.ItemWrap>\n      {isLoading ? (\n        <Styled.LoaderWrap>\n          <ReactLoading type=\"spin\" color=\"#A593E0\" />\n        </Styled.LoaderWrap>\n      ) : (\n        ''\n      )}\n      <div ref={setTarget} />\n    </>\n  );\n};\n\nexport default InfiniteScroll;\n","/Users/yunminseok/Desktop/study/Mlog/components/section/postpage/infiniteScroll/InfiniteScroll.style.ts",[],[],{"ruleId":"97","severity":1,"message":"98","line":93,"column":6,"nodeType":"99","endLine":93,"endColumn":22,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":105,"column":6,"nodeType":"99","endLine":105,"endColumn":22,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":45,"column":6,"nodeType":"99","endLine":45,"endColumn":14,"suggestions":"104"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mouseDownClientX', 'moveLeft', and 'moveRight'. Either include them or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'moveRight'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'onIntersect'. Either include it or remove the dependency array.",["107"],{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [mouseDownClientX, mouseUpClientX, moveLeft, moveRight]",{"range":"114","text":"115"},"Update the dependencies array to be: [moveRight, translateValue]",{"range":"116","text":"117"},"Update the dependencies array to be: [onIntersect, target]",{"range":"118","text":"119"},[2487,2503],"[mouseDownClientX, mouseUpClientX, moveLeft, moveRight]",[2728,2744],"[moveRight, translateValue]",[1268,1276],"[onIntersect, target]"]